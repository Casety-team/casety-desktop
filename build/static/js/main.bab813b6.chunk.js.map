{"version":3,"sources":["services/auth.service.js","pages/users/Signin.js","pages/users/Signup.js","services/auth-header.js","services/user.service.js","pages/Home.js","pages/Shop.js","Stripe/StripeContainer.js","pages/users/Profile.js","pages/users/BoardUser.js","pages/moderator/BoardModerator.js","pages/admin/BoardAdmin.js","pages/Router.js","config/reportWebVitals.js","index.js"],"names":["API_URL","process","REACT_APP_API_URL","firstname","lastname","email","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","required","value","role","Signin","props","form","useRef","checkBtn","useState","setEmail","setPassword","loading","setLoading","message","setMessage","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","history","push","window","location","reload","error","resMessage","toString","ref","htmlFor","type","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vFirstname","vLastname","vpassword","Signup","setFirstname","setLastname","successful","setSuccessful","className","authHeader","user","get","headers","Home","content","setContent","useEffect","UserService","_content","Shop","currentUser","href","stripePromise","loadStripe","ProductDisplay","handleClick","id","onClick","Message","Stripe","nameProduct","unitAmount","quantity","query","URLSearchParams","search","event","a","stripe","reservationId","idUser","session","redirectToCheckout","sessionId","Profile","username","substring","substr","roles","map","index","BoardUser","BoardModerator","BoardAdmin","Router","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","showUserBoard","setShowUserBoard","undefined","setCurrentUser","includes","to","exact","path","component","StripeContainer","Login","Register","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bab813b6.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:4545/api/\";\n\nconst register = (firstname, lastname, email, password) => {\n  return axios.post(API_URL + \"auth/signup\", {\n    firstname,\n    lastname,\n    email,\n    password,\n  });\n};\n\nconst login = (email, password) => {\n  return axios\n    .post(API_URL + \"signin\", {\n      email,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\n","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return <div role=\"alert\">This field is required!</div>;\n  }\n};\n\nconst Signin = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(email, password).then(\n        () => {\n          props.history.push(\"/profile/\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleLogin} ref={form}>\n      <div>\n        <label htmlFor=\"Email\">Email</label>\n        <Input\n          type=\"text\"\n          name=\"Email\"\n          value={email}\n          onChange={onChangeEmail}\n          validations={[required]}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"password\">Password</label>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={onChangePassword}\n          validations={[required]}\n        />\n      </div>\n\n      <div>\n        <button disabled={loading}>\n          {loading && <span>Spiner</span>}\n          <span>Login</span>\n        </button>\n      </div>\n\n      {message && (\n        <div>\n          <div role=\"alert\">{message}</div>\n        </div>\n      )}\n      <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n    </Form>\n  );\n};\n\nexport default Signin;\n","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vFirstname = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div role=\"alert\">\n        The Firstname must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vLastname = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div role=\"alert\">\n        The Lastname must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Signup = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeFirstname = (e) => {\n    const firstname = e.target.value;\n    setFirstname(firstname);\n  };\n\n    const onChangeLastname = (e) => {\n    const lastname = e.target.value;\n    setLastname(lastname);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(firstname, lastname, email, password).then(\n        (response) => {\n          setMessage(response.data.message);\n          setSuccessful(true);\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setMessage(resMessage);\n          setSuccessful(false);\n        }\n      );\n    }\n  };\n\n  return (\n    <Form onSubmit={handleRegister} ref={form}>\n      {!successful && (\n        <div>\n          <div>\n            <label htmlFor=\"Firstname\">Firstname</label>\n            <Input\n              type=\"text\"\n              name=\"Firstname\"\n              value={firstname}\n              onChange={onChangeFirstname}\n              validations={[required, vFirstname]}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"Lastname\">Lastname</label>\n            <Input\n              type=\"text\"\n              name=\"Lastname\"\n              value={lastname}\n              onChange={onChangeLastname}\n              validations={[required, vLastname]}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={onChangeEmail}\n              validations={[required, validEmail]}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required, vpassword]}\n            />\n          </div>\n\n          <div>\n            <button>Sign Up</button>\n          </div>\n        </div>\n      )}\n\n      {message && (\n        <div>\n          <div\n            className={ successful ? \"success\" : \"danger\" }\n            role=\"alert\"\n          >\n            {message}\n          </div>\n        </div>\n      )}\n      <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n    </Form>\n  );\n};\n\nexport default Signup;\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    return { 'x-access-token': user.accessToken };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:4545/api/\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"all\");\n};\n\nconst getUserBoard = () => {\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nconst getModeratorBoard = () => {\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\n};\n\nexport default {\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst Home = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getPublicContent().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nconst Shop  = () => {\n  const currentUser = AuthService.getCurrentUser();\n  \n  return (\n  <>\n    {!currentUser ? (\n      <a href=\"/login\">Go login</a>\n    ) : (\n      <a href=\"/buy/1\">Buy</a>\n    )} \n  </>\n  )\n}\n\nexport default Shop;","import React, { useState, useEffect, useRef } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport \"./app.css\";\nimport axios from \"axios\";\n\nconst stripePromise = loadStripe(\n  \"pk_test_51I6xfpGWsM2bVeof75ZGYq7KXzLoNhta0xQFMtwbOZTz6sQKE2200cc7J8QoeGXkILPAve6Wl1zdLRL1TBFaGaQZ00k7zmJZhm\"\n);\n\nconst ProductDisplay = ({ handleClick }) => (\n  <section>\n    <div className=\"product\">\n      <h1>Product 1 </h1>\n    </div>\n    <button\n      type=\"button\"\n      id=\"checkout-button\"\n      role=\"link\"\n      onClick={handleClick}\n    >\n      Checkout\n    </button>\n  </section>\n);\n\nconst Message = ({ message }) => (\n  <section>\n    <p>{message}</p>\n  </section>\n);\n\nexport default function Stripe() {\n  const [message, setMessage] = useState(\"\");\n\n  //form\n  const [nameProduct, setNameProduct] = useState(\"Product 1\");\n  const [unitAmount, setUnitAmount] = useState(300);\n  const [quantity, setQuantity] = useState(3);\n\n  useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n    }\n\n    if (query.get(\"canceled\")) {\n      setMessage(\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\n      );\n    }\n  }, []);\n\n  const handleClick = async (event) => {\n    const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:4545/\";\n    const stripe = await stripePromise;\n    const response = await axios.post(API_URL + \"/stripe/charge\", {\n      nameProduct: nameProduct,\n      unitAmount: unitAmount,\n      quantity: quantity,\n      reservationId: 1,\n      idUser: 1, //change get Location\n    });\n    const session = await response;\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.data.id,\n    });\n\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    }\n  };\n\n  return message ? (\n    <Message message={message} />\n  ) : (\n    <ProductDisplay handleClick={handleClick} />\n  );\n}\n","import React from \"react\";\nimport AuthService from \"../../services/auth.service\";\n\nconst Profile = () => {\n  const currentUser = AuthService.getCurrentUser();\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n          <strong>{currentUser.username}</strong> Profile\n        </h3>\n      </header>\n      <p>\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n      </p>\n      <p>\n        <strong>Id:</strong> {currentUser.id}\n      </p>\n      <p>\n        <strong>Email:</strong> {currentUser.email}\n      </p>\n      <strong>Authorities:</strong>\n      <ul>\n        {currentUser.roles &&\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport UserService from \"../../services/user.service\";\n\nconst BoardUser = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getUserBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <header>\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardUser;\n","import React, { useState, useEffect } from \"react\";\nimport UserService from \"../../services/user.service\";\n\nconst BoardModerator = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getModeratorBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <header>\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardModerator;\n\n","import React, { useState, useEffect } from \"react\";\nimport UserService from \"../../services/user.service\";\n\nconst BoardAdmin = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getAdminBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <header>\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardAdmin;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useParams,\n} from \"react-router-dom\";\n\nimport AuthService from \"../services/auth.service\";\n\nimport Login from \"./users/Signin\";\nimport Register from \"./users/Signup\";\n\nimport Home from \"./Home\";\nimport Shop from \"./Shop\";\nimport StripeContainer from \"../Stripe/StripeContainer\";\n\nimport Profile from \"./users/Profile\";\nimport BoardUser from \"./users/BoardUser\";\nimport BoardModerator from \"./moderator/BoardModerator\";\nimport BoardAdmin from \"./admin/BoardAdmin\";\n\nconst Router = () => {\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n  const [showUserBoard, setShowUserBoard] = useState(false);\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n      setShowUserBoard(user.roles.includes(\"ROLE_USER\"));\n      setShowModeratorBoard(user.roles.includes(\"ROLE_MODERATOR\"));\n      setShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n  };\n\n  return (\n    <BrowserRouter>\n      <nav>\n        <Link to={\"/\"}>Casety</Link>\n        <div>\n          <li>\n            <Link to={\"/home\"}>Home</Link>\n          </li>\n          <li>\n            <Link to={\"/shop\"}>Shop</Link>\n          </li>\n\n          {showAdminBoard && (\n            <li>\n              <Link to={\"/admin\"}>Admin Board</Link>\n            </li>\n          )}\n          {showModeratorBoard && (\n            <li>\n              <Link to={\"/mod\"}>Moderator Board</Link>\n            </li>\n          )}\n          {showUserBoard && (\n            <li>\n              <Link to={\"/user\"}>User</Link>\n            </li>\n          )}\n        </div>\n\n        {currentUser ? (\n          <div>\n            <li>\n              <Link to={\"/profile\"}>{currentUser.username}</Link>\n            </li>\n            <li>\n              <a href=\"/login\" onClick={logOut}>\n                LogOut\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div>\n            <li>\n              <Link to={\"/login\"}>Login</Link>\n            </li>\n            <li>\n              <Link to={\"/register\"}>Sign Up</Link>\n            </li>\n          </div>\n        )}\n      </nav>\n      <Switch>\n        <Route exact path={[\"/\", \"/home\"]} component={Home} />\n        <Route exact path=\"/shop\" component={Shop} />\n        <Route exact path=\"/buy/:productId\" component={StripeContainer} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/user\">\n          {!showUserBoard ? <Redirect to=\"/\" /> : <BoardUser />}\n        </Route>\n        <Route path=\"/mod\">\n          {!showModeratorBoard ? <Redirect to=\"/\" /> : <BoardModerator />}\n        </Route>\n        <Route path=\"/admin\">\n          {!showAdminBoard ? <Redirect to=\"/\" /> : <BoardAdmin />}\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './pages/Router';\nimport reportWebVitals from './config/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}